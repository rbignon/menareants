2005-11-28  Romain Bignon <progs@headfucking.net>

	* server/Channels.cpp: Empeche le join d'un salon en cours de jeu...

	* src/Main.cpp: Utilisation du parsage unicode des chars au clavier.

	* src/JoinGame.cpp: Utilisation du ListBox et du Edit pour faire un petit espace de discussion.

	* src/gui/Memo.cpp: Création du composant Memo en s'inspirant du ListBox.

	* src/gui/Edit.cpp: Création du composant Edit.

2005-11-27  Romain Bignon <progs@headfucking.net>

	* src/gui/ListBox.cpp: Disable...

	* src/Commands.h: Commande MSG et LEA

	* server/Channels.c: Commande MSG.

	* lib/Channels.h: State.

	* lib/Outils.cpp: Correction bug de stringtok.

	* src/JoinGame.cpp: Interface DANS une partie.

2005-11-26  Romain Bignon <progs@headfucking.net>

	* src/Login.cpp: Gestion commande Used

	* src/Main.cpp: Meilleur système de connexion.

	* src/gui/Menu.cpp: Utilisation d'une fonction plus généraliste et statique Menu::EnterString().

	* src/Sockets.cpp: Parsage du premier argument de parv (player(s)).

	* src/Commands.h: Commandes JOI, PLS, EOL, USED.

	* src/JoinGame.cpp: support du join.

	* src/gui/ListBox.cpp: Membre ClearItems().

	* src/Resources.cpp: Anim NormalButton.

	* src/gui/BouttonText.cpp: Rajout du fichier avec ButtonText pour dessiner un bouton (©wormux)

2005-11-25  Romain Bignon <progs@headfucking.net>

	* src/JoinGame.cpp: Rajout du fichier pour la boucle de la liste des jeux, ainsi que de l'écran
	de création/join de jeu.

	* src/data/anims: Répertoire créé. Avec dedans les anims des boutons "up" et "down".

	* src/tools/Maths.cpp: Création fichier avec deux petites fonctions.

	* src/Resources.cpp: rajout des sprites pour UpButton et DownButton

	* src/gui/ListBox.cpp: Rajout du fichier avec la classe ListBox pour dessiner une listbox (©wormux)

	* src/gui/Boutton.cpp: Rajout du fichier avec la classe Button pour dessiner un bouton (©wormux)

	* src/tools/Images.h: rajout de ECSprite::GetWidth() et ECSprite::GetHeight()

2005-11-23  Romain Bignon <progs@headfucking.net>

	* src/gui: Création du répertoire. Mise de Menu.cpp dedans ainsi que de ListBox.cpp (vide).

	* server/Server.cpp (TClient::Init): Met la valeur de lastread à maintenant pour éviter un
	PIG immédiat.

	* server/Login.cpp (BYECommand): Commande pour faire partir un client.

	* server/Channels.cpp (LSPCommande): Commande pour lister les jeux.
	(~EChannel): Destructeur se retire de la liste ChanList.

	* server/Channels.cpp, server/Channels.h (sendto_players): envoie à tous les joueurs du jeu
	(JOICommand): commande pour joindre ou créer un jeu
	(LEACommand): commande pour partir d'un jeu

	* lib/Outils.c (FormatStr): fonction qui formate les chaines en un "mot" (mise de '\')

2005-11-22  Romain Bignon <progs@headfucking.net>

	* API: Mise à jour.

	* server/Server.h, server/Server.cpp, server/Main.h, server/Login.cpp: Utilisation plus
	structurée de TClient;

	* server/Channels.cpp, server/Channels.h (EChannels): Structure serveur des channels.
	(ECPlayer): Structure serveur des players.

	* lib/Channels.h, lib/Channels.cpp (ECBChannels): Structure de base (commune) des channels.
	(ECBPlayer): Structure de base (commune) des channels.

2005-11-21  Romain Bignon <progs@headfucking.net>

	* server/Channels.cpp, lib/Channels.h: Création des fichiers.

	* lib/Channels.cpp, lib/Channels.h: Création des fichiers.
	(EChannel): classe channel par default.
	(ECPlayer): classe player par default.

	* src/Sockets.cpp: Correction du bug de la connexion.

	* src/Login.cpp: Prise en charge de la commande AIM.

	* API: Mise à jour.

	* INSTALL: Remplissage.

2005-11-20  Romain Bignon <progs@headfucking.net>

	* src/Sockets.cpp: réécriture des sockets. Utilisation de SDL_Thread.

	* src/Main.cpp (EuroConqApp::request_game()): Utilisation d'un second menu pour "Jouer".

2005-11-18  Romain Bignon <progs@headfucking.net>

	* autogen.sh, configure.ac: prise en compte sdl, ajout DEBUG, changement autogen.sh (©wormux), etc.

	* Reorganisation des dossiers

	* Passage à SDL terminé (mais il faut debuguer !)

	* src/Menu.cpp: Passage normalement correct à SDL.

	* src/tools/Images.h, src/tools/Images.c: Création du fichier (reprise de fonctions d'un tuto)
	(ECImage): classe pour les images
	(ECSpriteBase): classe pour la base des animations
	(ECSprite): classe pour les animations

	* src/tools/Font.cpp, src/tools/Font.h: Reprise du fichier de Wormux.

	* lib/Outils.h (StrToInt): changement en StrToTyp()
	(TypToStr): fonction pour transformer en une chaine.

2005-11-16  Romain Bignon <progs@headfucking.net>

	* Transcription de ClanLib vers SDL en cours...

2005-11-11  Romain Bignon <progs@headfucking.net>

	* server/Login.cpp: Rajout du fichier avec les fonctions de logging.
	(PIGCommand::Exec): Fonction PING
	(POGCommand::Exec): Fonction PONG
	(IAMCommand::Exec): Fonction IAM

	* src/Login.cpp: Rajout du fichier avec les fonctions de logging.
	(HELCommand::Exec): Fonction HELLO
	(PIGCommand::Exec): Fonction PING
	(POGCommand::Exec): Fonction PONG

	* src/Sockets.c: corrections

	* server/Commands.h, server/Server.c: Parsage des commandes correct.

	* server/Server.c (ECServer::parsemsg): Création de cette fonction de parsage.
	(ECServer::sendrpl): Création de cette fonction pour envoyer un message
	(ECServer::rpl): Création de cette fonction qui renvoie le pattern à partir d'un enumérateur.

2005-11-08  Romain Bignon <progs@headfucking.net>

	* pics/loading.png: Utilisation d'un png pour le loading.

	* server/: Création du serveur (option --enable-server dans configure pour compiler).

	* lib/: Utilisation maintenant de ce rep pour mettre le code utilisé par les deux programmes.

	* Sockets.cpp: Theoriquement plus aucun bug.

2005-11-08  Romain Bignon <progs@headfucking.net>

	* Sockets.cpp: Système de commandes theoriquement *pret*.

	* Sockets (EC_Client::send): Fonction crée.

2005-11-07  Romain Bignon <progs@headfucking.net>

	* Sockets.cpp: Ébauche de la gestion des commandes.

2005-11-06  Romain Bignon <progs@headfucking.net>

	* Menu.cpp: Gestion de flags:
	M_READ_ONLY: Champ non modifiable ou lien inactif, change la couleur du focus en gris.
	M_NOFMAJ: Ne pas mettre une maj automatique au début d'une chaine pour un MenuItem_String.
	M_RETOUR: Gère comme étant un bouton de retour: légèrement séparé, et retourne au menu supérieur.

	* Sockets.c (connect_to_server): Affichage d'un message d'erreur si la connexion echoue.

	* Sockets.c: Utilisation des sockets "de bases" avant de se servir de CL_Socket: permet d'éviter
	un bug bizare qui ne permet de se connecter qu'en local.

	* Outils.cpp (stringtok): Équivalent de strtok pour les chaines.

	* Outils.cpp: Outils

	* Config.cpp: Création de la configuration.

	* API: Reflexion sur le protocole.

	* Sockets.cpp: Correction bug du blockage du socket.

2005-11-05  Romain Bignon <progs@headfucking.net>

	* Sockets.cpp: Création d'un support sockets.

	* Utilisation d'un repositery CVS.

	* Menu.cpp: Possibilité d'une fonction à appeler lors de l'utilisation d'un Item.

	* pics/smallfont.pcs: Modification de la fonte.

	* pics/: Utilisations d'un beau background. (By Thomas)

	* Defines.h: Création du fichier et d'un super système de gestion des versions.

	* Main.cpp (main): Création fonction avec menu.

	* Menu.cpp: Reprise du fichier de clanbomber pour la création de menus.

	* Timer.cpp: Reprise du fichier de clanbomber pour la création de timers.

	* Resources.cpp: Inspiration de clanbomber pour l'utilisation des fichiers de ressources.

	* array.h,link.h: Utilisation de ces fichiers d'origine clanlib.

2005-11-04  Romain Bignon <progs@headfucking.net>

	* Initialisation du projet.