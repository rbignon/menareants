2005-04-29  Romain Bignon <progs@headfucking.net>

	* server/Channels.cpp: Vérification des +! lors du quit.

	* src/Sockets.cpp, src/gui/Form.cpp, src/JoinGame.cpp: Utilisation des mutex pour ne pas buguer.

	* src/gui/ComboBox.cpp, src/JoinGame.cpp: Correction du bug de la position des nations dans GameInfos.

	* server/Map.cpp: Correction du bug qui, lorsque le client veut bouger et qu'il est en conflit déjà avec un mec
	(sans le savoir), fait disparaitre le client. Utilisation d'une mémorisation des mouvements.

	* src/InGame.cpp: - On est prévenu quand un joueur veut faire une attaque explicite.
	- Mise en "lock" lorsque l'armée a join une autre.
	- N'ajoute rien si pas sur une bonne case.
	- Enlevage de bugs

	* src/gui/ShowMap.cpp: Elevage d'un bug concernant les mutex.

	* src/Defines.h, src/data: Modification de la taille des cases à 100*100 avec de nouvelles images.

	* API, server/InGame.cpp: Envoie d'un '.' pour LOCK une armée quand elle union.

2005-04-27  Romain Bignon <progs@headfucking.net>

	* server/InGame.cpp: Correction d'un bug qui ne vérifiait pas les attaques dans un create, et qui envoie *tous* les
	déplacements d'un joueur

	* server/Map.h (ECEntity): Il stock maintenant tous ses déplacements.

2005-04-26  Romain Bignon <progs@headfucking.net>

	* API: Paragraphe concernant l'IA.

	* server/Channels.cpp, server/Server.cpp: Les IA partent bien en cours de partie si il n'y a plus aucun humain.

	* server/Channels.cpp: Corrections pour le portage.

	* lib/Channels.h, src/JoinGame.cpp, server/IA.cpp: Caractère ajouté devant le pseudo de l'IA poru la reconnaitre.

	* src/JoinGame.cpp, src/Channels.h, lib/Channels.h: Fonction ECPlayer::IsIA(), et coté client il y a un argument
	au constructeur.

	* src/InGame.cpp: Modification de l'utilisation des boutons de la souris.

	* lib/Debug.h: Ajout de assert()

	* lib/Outils.h: - Fonction MyFree() (plutot que macro) avec une sécurité
	- Portage si la std est trop vieille.

2005-04-25  Romain Bignon <progs@headfucking.net>

	* src/gui/Component.cpp, src/gui/Form.cpp: Rajout d'un paramètre "dynamic_hint" qui donne la priorité et qui fait
	fonctionner les hints du GameInfosForm sur la combobox des nations.

2005-04-23  Romain Bignon <progs@headfucking.net>

	* server/IA.cpp: Utilisation d'un système de Lock pour ne pas traiter les messages tout de suite.

	* server/Channels.cpp (ByeEveryBody): Cette fonction peut avoir une exception.

	* server/Server.cpp: Correction d'un bug concernant l'IA.

	* src/JoinGame.cpp: Utilisation d'un Hint et réorganisation de la Form.

	* src/gui/Components.cpp, src/gui/ChildForm.cpp: Modifs concernant les Hints.

2005-04-20  Romain Bignon <progs@headfucking.net>

	* server/IA.cpp (JIACommand): Commande pour créer une IA dans un chan.
	(TIA): Classe de l'Intelligence Artificielle

	* src/JoinGame.cpp: - La MapList n'est affichée que lorsque l'user est op ou owner.
	                    - Délais pour eviter les clics abusifs dans la liste des maps.

	* lib/Outils.cpp, src/Sockets.cpp, server/Server.cpp: Utilisation d'une fonction SplitBuf().

2005-04-19  Romain Bignon <progs@headfucking.net>

	* server/Server.cpp: Système des clients revisités pour accueillir l'intelligence artificielle...

	* src/InGame.cpp: Affichage un peu partout d'hints...

	* src/gui/ListBox.cpp: Hints pour chaques items.

	* */Units.h: Macros pour les constructeurs.

2005-04-13  Romain Bignon <progs@headfucking.net>

	* server/Makefile.am: Installation de la configuration dans $prefix/etc/.

	* configure.ac, server/menareants.conf.in: Le path du motd dans la conf dépend du rep d'installation.

	* src/JoinGame.cpp: Correction d'un bug qui posait problème lors du lancement du jeu quand c'était trop lent (desynch).

	* src/Component.h, src/Form.cpp, src/ChildForm.cpp: OnMouseOn() et Hint().

	* src/Main.cpp, src/Config.cpp: Nouveau nom pour On*.

	* src/InGame.cpp: Affichage des icones à droite, utilisation d'un TChildForm et affichage du Hint.

	* src/Map.cpp: N'affiche plus les contours sur la mer (preview).

2005-04-12  Romain Bignon <progs@headfucking.net>

	* src/Main.cpp, src/Config.cpp: Affiche la ConfigForm au lancement lors du premier lancement.

	* src/tools/Images.cpp: Nouvelles fonctions, modifications...

	* gui/Edit.cpp: Nouvelle version du composant beaucoup plus elaborée.

	* gui/: Passage à des composants qui sont indépendants de MenAreAntsApp.

	* gui/Components.h (ForceFocus): Force le focus, pour T*Form.
	(ClickedFuncPos): Fonction qui connait les coordonnées de la souris lors du click.

	* src/InGame.cpp (BarreLat): Le clic sur le radar fait bouger la camera.

	* server/Channels.cpp, src/Config.cpp, src/JoinGame.cpp: Utilisation de macros NICK_CHARS et CHAN_CHARS pour limiter
	les chars autorisés.

	* src/gui/MessageBox.h: Lorsqu'on ne spécifie pas de position, l'afficher au centre.

	* lib/UnitsList.h, server/InGame.cpp, src/Map.cpp, src/InGame.cpp: Liste des unités qui permet de n'avoir à mettre
	  à jour qu'ici lors d'ajout d'unités.

	* configure.ac: Paramètre --enable-full-warnings

2005-04-11  Romain Bignon <progs@headfucking.net>

	* server/Channels.cpp (RemovePlayer): Gestion du départ d'un joueur pendant une partie.

	* server/Map.cpp (CheckRemoveBecauseOfPartOfAttaqEntity): Fonction dont le nom est explicite :p.

2005-04-10  Romain Bignon <progs@headfucking.net>

	* lib/Map.cpp (CheckChaningOwner): Fonction de ECBCase pour vérifier si sa prise créé un changement d'owner.

	* lib/Channels.cpp, server/Channels.cpp: Passage de ModesStr() dans le serveur avec affichage de la map dans les modes.

	* API, server/Channels.cpp, server/Map.cpp: Mode +@ pour changer l'owner d'une country.

	* src/AltThread.cpp: Utilisation de stack plutot que de vector.

	* src/JoinGame.cpp: Messages...

	* src/gui/Object.h, src/gui/Component.h, src/gui/Form.h, src/gui/ChildForm.h:
	  Création de TObject mère de toutes les classes graphiques (T*), avec gestion des parents.

	* src/gui/ShowMap.cpp (CenterOn): Méthode pour centrer la camera sur un point particulier.

	* server/InGame.cpp (SendArm): Quand il n'y a pas d'evenement de mouvement lié, utiliser x et y plutot que les
	coordonnées de l'entité, car il est possible qu'on veuille envoyer un CREATE avant un MOVE.

	* src/Map.cpp (ECEntityList): Liste des entitées qui peut etre utilisée pour récupérer la liste des entitées
	pouvant etre créée par une case ou une autre entité (batiment).

	* src/InGame.cpp (BarreAct): Possibilité de selectionner une case et de créer des unités.

	* src/data/pics/units: Boutons des unités.

	* src/data/barrelat.png: Nouvelle version un peu plus belle.

2005-04-09  Romain Bignon <progs@headfucking.net>

	* src/InGame.cpp: Gestion de l'ajout d'unités, des messages d'information, et quelques corrections.

	* server/InGame.cpp (ARM_NUMBER): Gestion, et n'en fait plus un evenement lors du ANIMING (les autres s'en foutent).

	* src/gui/Memo.cpp: Taille maximum de caractère par ligne adapté à la chaine elle meme (meilleur resultat).

	* src/, WIN32: Portabilité du code du jeu pour windows.

2005-04-08  Romain Bignon <progs@headfucking.net>

	* src/gui/Component.cpp (TList), src/gui/ChildForm.cpp: Gestion des focus et clics

	* src/gui/Form.cpp: Debugage.

	* src/Resources.h, src/data/pics, src/InGame.cpp: Barre d'actions.

	* src/AltThread.cpp: Thread alternatif qui peut recevoir des instructions à executer.

2005-04-05  Romain Bignon <progs@headfucking.net>

	* server/InGame.cpp: Suppression de l'ancien code.

	* src/Units.cpp: Gestion des déplacements en mode ANIMING.

	* src/InGame.cpp: Amélioration de la gestion des déplacements.

	* src/Main.cpp, server/Main.cpp: Un peu plus beau.

	* src/Config.cpp, src/JoinGame.cpp: Nation par défaut.

	* lib/Outils.cpp (GetHome): Fonction pour récupérer le $HOME.

2005-04-01  Romain Bignon <progs@headfucking.net>

	* src/InGame.cpp, src/gui/ShowMap.cpp: Gestion des déplacements anticipés.

	* lib/Map.h, server/Map.h, src/Map.h: Passage de ECBMove dans lib/ et dérivée dans src/Map.h (ECMove)

	* src/JoinGame.cpp: Amélioration de l'ergonomie.

	* server/Channels.cpp (SETCommand): Gestion de problèmes liés au READY.

	* src/data/anims/cases/mer: Animation de la mer.

	* lib/Debug.h: Utilisation de __PRETTY_FUNCTION__ qui renvoit un nom de fonction plus complet.

	* Changement du nom du jeu (Europa Conquest -> Men Are Ants).

2005-03-31  Romain Bignon <progs@headfucking.net>

	* lib/Channels.h: Gestion des nations (enumérateur, tableau d'équivalence de chaine, etc)

	* server/Channels.cpp: Gestion des nations.

	* src/JoinGame.cpp: Gestion des nations

	* src/InGame.cpp: Evite d'appeler TFont::Write* à chaque Draw() du TPlayer*.

	* src/gui/ListBox.cpp: Améliorations...

	* src/gui/ComboBox.cpp: Améliorations...

	* src/gui/Component.cpp, src/gui/Form.cpp: Maintenant l'affichage en tete du composant focusé est fonctionnel.

	* server/InGame.cpp: Gestion des unions.

2005-03-30  Romain Bignon <progs@headfucking.net>

	* src/gui/ComboBox.cpp: Programmation d'un composant TComboBox.

2005-03-29  Romain Bignon <progs@headfucking.net>

	* lib/Outils.h (nrvector): Vecteur dérivé de std::vector sans répétitions.
	Retour de std::string plutot que de chaines dans FormatStr().

	* src/gui/SpinEdit.cpp: Correction d'un petit bug.

	* src/gui/ShowMap.cpp: Ne redimentionne pas quand la carte est plus petite que l'écran.

	* src/gui/Label.h: Peut paramétrer la couleur du label.

	* src/gui/Component.h, src/gui/Form.cpp: Pour les evenements, donne en argument le Form et un paramètre arbitraire.

	* src/data: Nouvelles images plus belles (nouveau style).

	* src/Map.cpp (CreatePreview): Paramètre pour ne pas afficher les numeros.

	* src/gui/Menu.cpp: Suppression du menu.

	* src/Login.cpp: Application du nouveau style.

	* src/JoinGame.cpp: Correction de bugs (part), receptions infos pour InGame.

	* src/InGame.cpp: Application nouveau style, affichage dans la BarreLat de la date, l'heure et l'argent par tour.

	* server/Units.cpp, server/InGame.cpp: FONDAMENTALE: Passage à un mode de déplacement pas à pas.

	* server/Server.cpp, server/Channels.cpp: Le départ de l'owner supprime le jeu.

	* server/Map.h (ECMove): Cette classe compatibilise les mouvements (et passera sous peu dans lib/).

	* server/Channels.cpp: Application au principe de déplacement pas-à-pas à SendArm(), support de la couleur et de la
	position aléatoire.

2005-03-25  Romain Bignon <progs@headfucking.net>

	* src/Sockets.cpp: Support des hosts et correction de bugs.

	* src/Main.cpp: Utilisation d'un TForm pour le menu principal.

	* src/Config.cpp: Utilisation d'un TForm pour la config, support d'une liste de serveurs et de la couleur par default.

	* src/gui/ColorEdit.cpp: Correction d'un bug qui n'affichait pas le label.

	* src/JoinGame.cpp, server/Channels.cpp: Affiche le nom de la map et les parties jouées dans la liste.

	* lib/Outils.cpp: Rajout de is_ip().

2005-03-19  Romain Bignon <progs@headfucking.net>

	* lib/Map.h, server/Map.h (EC*Entity): Passage du system de last de lib à server, et passage de event_type de server à
	lib.

	* src/data/pics/fleches: Fleches d'attaque.

	* src/Units.cpp: Gestion des déplacements.

	* src/gui/ShowMap.cpp: Utilisation des fleches d'attaque, et ne bouge plus quand le composant est !Enabled().

	* src/gui/Components.h, src/gui/*.h: Fonctions Test(), Clic() et Focused().
	Rajout en outre d'un pointeur vers un TClickedFunction, pour appeler une fonction dédiée lorsqu'on le clique.

	* src/gui/Form.h: Fonction Actions() à appeler dans la boucle d'une fenetre. Met le focus lui même et appel la
	fonction Clic() par default de TComponent(), ainsi que l'appel de la ClickedFunc si définie.

	* src/InGame.cpp: Composants TEdit et TMemo pour l'affichag du chat.

	* src/InGame.cpp, src/Map.cpp: Gestion des animations.

	* src/InGame.cpp, src/Login.cpp, src/JoinGame.cpp: Utilisation de TForm::Actions().

	* src/gui/Edit.h: N'affiche pas forcément le background.

	* src/Timer.cpp, src/gui/Menu.cpp: Correction d'un bug.

2005-03-18  Romain Bignon <progs@headfucking.net>

	* lib/Outils.h (is_num): Fonction pour vérifier si une chaine est un entier.

	* lib/Map.cpp, lib/Units.h: Prise en compte du prix d'une entité.

	* server/Map.cpp, lib/Map.cpp: Passage de server à lib des fonctions ECMap::AddAnEntity() et ECMap::RemoveAnEntity().

	* src/gui/ShowMap.h (TShowMap): Composant qui affiche la carte.

	* src/gui/ChildForm.h (TChildForm): Composant qui est une Form enfant.

	* src/data/: Rajout des fleches, de la barre laterale, du curseur de selection et d'animation (de merde) pour la mer.

	* src/gui/Component.h, src/gui/*: Passage des variables x et y de uint à int ainsi que quelques autres changements.

	* src/InGame.cpp: Gestion de la carte, ébauche de la gestion des déplacements et des animations.

	* src/JoinGame.cpp: Support du LEA, et des changements de modes pour le mode PLAYING.

	* src/Sockets.cpp: Commande ARM.

	* src/Map.cpp, src/Units.h: Dérivation des cases et entitées avec leur image, fonctions pour afficher, gérer, etc.

	* src/Defines.h: Constantes pour la résolution de l'écran plutot que des valeurs magiques.

	* src/tools/Images.cpp: Correction de bugs.

	* src/tools/Font.cpp: Correction du bug qui n'affichait pas le texte bien au centre verticalement avec WriteCenter().

2005-03-17  Romain Bignon <progs@headfucking.net>

	* src/gui/: Réorganisation en utilisant int plutot que uint pour X et Y.

2005-03-17  Romain Bignon <progs@headfucking.net>

	* lib/Channels.h: Petites améliorations.

	* lib/Map.cpp: Support pour le type des cases du client, fonction ECBCountry::ChangeOwner() et autres...

	* lib/Outils.h (ECList): Fonctions Fixed() et Moved(), et quelques modifs.

	* lib/Units.cpp: Modification des Attaq() et Move() en WantAttaq() et WantMove().

	* server/Units.cpp (ECArmy): Gestion des attaques.

	* server/Map.cpp: Gestion du tri des evenements, fonction static ECEntity::AreFriends() et autres..

	* server/InGame.cpp: Gestion des attaques.

	* src/JoinGame.cpp: Suppression des TPlayerLine pour le LoadingForm.

	* src/gui/Components.h (TLine): Rajout de l'argument use_delete dans RemoveComponent.

2005-03-15  Romain Bignon <progs@headfucking.net>

	* src/Map.cpp: Dérivation des cases avec chargement des sprites des cases.

	* src/gui/MessageBox.h: Rajout de la possibilité de mettre un Edit dans le MessageBox.

	* server/Main.cpp: Fonction CleanUp() pour libérer la mémoire.

	* server/: Un certain nombre de corrections de fuites de mémoire.

	* src/data/anims/cases: Images des cases

	* src/data/anims/normalbutton: Images d'un boutton "normal"

	* src/gui/Boutton.cpp: Utilisation du normalbutton comme image par default

	* src/JoinGame.cpp,src/Login.cpp: Redimension des boutons

	* src/tools/Image.cpp: Correction d'un bug quand il y a plusieurs images non animées

	* src/Resources.h: Rajout de normalbutton et de toutes les images des cases, mise en place d'un nouveau système
	avec les macros qui déchire.

2005-03-12  Romain Bignon <progs@headfucking.net>

	* server/InGame.cpp: Gestion des créations et amélioration des animations.

	* server/Map.h (ECEvent): Type et nombre.

	* lib/Map.cpp (ECBEntity): Fonctions CanBeCreated(), CanCreate() et AddUnits()

	* lib/Outils.h (ECList): Rajout des fonctions membres ECList::Enemies() et ECList::Sames()

2005-03-11  Romain Bignon <progs@headfucking.net>

	* lib/Map.h: RemoveLast().

	* lib/Units.cpp: Union.

	* server/Channels.cpp, server/InGame.cpp: Premier support de l'animation.

	* server/Map.cpp: Fonctions pour ajouter ou supprimer une entity de tous les endroits où il faut.

	* server/Server.cpp: Ne s'arrete plus sur les messages vides.

2005-03-11  Romain Bignon <progs@headfucking.net>

	* server/Channels.cpp (SendArm): Fonction pour envoyer un message ARM.
	- Envoie de l'argent, des unités crées au début de la partie.

	* server/Main.h, server/Commands.h, server/InGame.cpp (ARMCommand): Commande ARM

	* server/Map.h (ECEvent): Support des evenements.

	* server/Server.cpp: Commande ARM, et vérifie bien les flags des commandes.

	* server/Units.h: Conforme aux définitions de ses ancetres.

	* src/Sockets.cpp: Variable "error" pour éviter d'attendre quand il y a eu une erreur à la connexion.

	* src/JoinGame.cpp: Support du mode +$

	* lib/Outils.h (ECList): Mise à jour.

	* lib/Map.h: Modifs importantes dans plusieurs classes.

	* lib/Units.cpp (ECArmy): Implémentation de fonctions élémentaires (mouvement, attaque, retour, etc).

2005-03-04  Romain Bignon <progs@headfucking.net>

	* src/gui/MessageBox: Correction du bug de dimentionnement horizontale.

2005-03-01  Romain Bignon <progs@headfucking.net>

	* API: Commande ARM

	* lib/Outils.h (ECList): Liste.

	* lib/Map.h: Rajout des entités, et de leur liste dans la map.
	Rajout du nombre de soldats dans les premières armées.
	Rajout de typedef pour les IDs (char ou char[3]).

	* lib/Channels.h: Rajout de la liste des entitées d'un player.

	* lib/Units.h (ECBArmee): Armée de base dérivée de ECBEntity.

	* server/Channels.cpp: - Envoie lors du mode SENDING des armées de chaques villes
	- Réorganisation de la propagation des modes plus simple et plus performante.
	- Fonction EChannel::SendArm() pour envoyer un message ARM par rapport aux différents arguments de la fonction.
	- Fonction EChannel::FindEntityName() pour trouver un nom d'entité non pris dans une liste.

	* server/Main.h, server/Server.cpp: Commande ARM.

	* server/maps: Mise à jour des maps.

	* src/InGame.cpp: Affichage de la date dans le Loading.

2005-02-24  Romain Bignon <progs@headfucking.net>

	* src/Outils.cpp (duration): Fonction pour avoir le temps d'une heure unix.

	* src/Login.cpp, server/Login.cpp, server/Server.cpp, API: Affiche l'uptime à la connexion.

	* src/Map.cpp: Affichage de la preview qui couvre toute une surface définie (ou paramétrable), avec donc la taille
	des cases variables suivant la taille de la carte. Affichage également des frontières, et coloriage des
	propriétés des joueurs quand ils en ont.

	* src/gui/Memo.h: Variable pour afficher ou non le background transparent.

	* lib/Batiments.h, lib/Units.h: Création des fichiers et classes de base.

	* lib/Colors.h, src/tools/Font.h, src/gui/ColorEdit.cpp: Suppression du noir dans les couleurs des joueurs, et rajout
	pour ces memes joueurs de couleurs "foncées" du bleu, du rouge, du marron et du blanc.

	* lib/Map.h: Rajout du map_infos qui contient quelques lignes d'informations un peu superflues.

	* src/InGame.cpp: Rajout du fichier qui contiendra les informations de dans le jeu.
	(LoadingForm): Form qui affiche un etat de chargement du jeu...

	* src/JoinGame.cpp: Quand l'etat est SENDING, afficher LoadingForm.

	* src/Sockets.cpp, server/Channels.cpp, src/JoinGame.cpp: Utilisation d'un indicateur '$' dans JOI pour dire qu'on
	veut *créer* un chan. Evite, quand on veut créer un chan, d'en rejoindre un existant ou d'essayer de joindre
	une partie déjà lancée (et que le serveur s'étonne).

2005-02-22  Romain Bignon <progs@headfucking.net>

	* src/gui/ColorEdit.cpp: Création du composant ColorEdit.

	* src/JoinGame.cpp: Rajout de la couleur.

2005-02-20  Romain Bignon <progs@headfucking.net>

	* src/JoinGame.cpp server/Server.cpp, server/Login.cpp, server/Map.coo: Petit formatage des messages des Debug
	pour plus de compréhension.

	* server/Channels.cpp: Support du passage de SENDING à PLAYING.

2005-02-19  Romain Bignon <progs@headfucking.net>

	* src/Channels.cpp: Supprime la map lors de la suppression du channel (uniquement dans le client car le serveur elle
	GARDE la map dans sa liste).

	* Changement des it++ en ++it (plus rapide).

	* src/gui/Images.cpp: Pour corriger un bug avec ECMap::preview, il y a un paramètre dans le TImage pour dire ou non
	si on veut que l'image soit supprimée à la suppression du composant.

	* Outils.cpp (get_time): Correction, il n'affichait pas l'heure.

	* API: Commande STAT pour voir les stats du serveur.

	* server/Server.cpp, server/Commands.h, server/Main.h, server/Channels.cpp: Statistiques du serveur.

	* src/Login.cpp: Affichage des stats

	* src/JoinGame.cpp: Support des noms de salon en plusieurs mots.

	* server/Channels.cpp: Le salon se met en mode SENDING quand tous les joueurs sont READY.

	* server/Debug.cpp: Le fichier errors.log devient plus clair car mieux structuré.

2005-02-18  Romain Bignon <progs@headfucking.net>

	* test/map.cpp: Petite mise à jour avec prise en compte de la date et test du ++ dessus.

	* lib/Map.cpp: Ajout de ECBDate.

	* API: Section "6. Êtat de la partie"

	* src/JoinGame.cpp, server/Channels.c: Ne peut se mettre Ready que si il a une position et une couleur.

	* src/JoinGame.cpp: Affichage de la preview.

	* src/Map.cpp: Fonction pour créer la preview.

	* src/gui/Image.cpp: Création d'un composant TImage.

	* lib/Channels.cpp, src/Channels.cpp, server/Channels.c: Rajout du status de "Op" pour le +o. Il ne peut y avoir qu'un
	seul owner.

	* src/tools/Font.cpp: Correction (enfin!) du bug du cpu et memoire full, en reprenant le code de wormux pour ce fichier.

	* src/tools/Images.cpp: Petite amélioration.

	* src/Main.cpp, ...: Mise du membre EuroConqApp::fonts et application partout.

2005-02-17  Romain Bignon <progs@headfucking.net>

	* src/JoinGame.cpp: Reception de la liste des maps et de la map paramétrée.

	* lib/Map.cpp: Utilisation d'une fonction virtuelle pour le Z d'une case, ainsi que quelques petites modifs.

	* server/Channels.cpp: Envoie la liste des maps au JOI et une map lors d'un +m

	* server/Map.cpp: Fonction d'ouverture de toutes les maps.

2005-02-16  Romain Bignon <progs@headfucking.net>

	* test/map.cpp: Outil permettant d'ouvrir une map (genre gna.map) et d'avoir des infos sur elle une fois qu'on a
	vérifié qu'elle ne comportait pas d'erreurs.

	* src/Map.cpp: Création des différentes classes ainsi que de diverses fonctions. Le chargement de la map MARCHE !
	
	* src/Commands.h (ER1): Prise en charge (enfin) de l'ER1 (CANTJOIN) même si elle est inutile !!
	
	* lib/Debug.h (VCName): macro pour les char.
	
	* src/Debug.cpp: Correction du bug qui envoyait deux fois la meme chaine au serveur avec W_SEND.
	
	* src/Login.cpp: Utilisation des accents.
	
	* src/gui/Label.cpp: Correction: on peut maintenant utiliser des accents dans les Label.

2006-02-13  Romain Bignon <progs@headfucking.net>

	* src/Map.cpp, lib/Map.cpp, server/Map.cpp: Création des fichiers.

	* src/JoinGame.cpp: Utilisation des valeurs interdites pour les "position" (TSpinEdit) des players.

	* src/gui/SpinEdit.cpp: Utilisation de valeurs interdites.

	* lib/Channels.h: Renomage des ECBChannel::*Place() en ECBChannel::*Position().

	* server/Channels.cpp (EChannel-send_modes()): Fonction qui envoie les modes aux players à partir d'un ou de
	plusieurs senders.

	* src/JoinGame.cpp: Utilise comme position maximale la limite et non plus le nombre de joueurs. En outre, actualise
	la position maximale lors d'un +l. En outre pour les modes "!pc" prend en compte *tous* les senders.

2006-02-12  Romain Bignon <progs@headfucking.net>

	* Corrections un peu partout. Normalement y a plus de plantages.

2006-02-08  Romain Bignon <progs@headfucking.net>

	* lib/Outils.h (MyFree): Macro qui utilise delete sur un pointeur et qui l'assigne à 0.

	* Utilisation de Doxygen.

2006-01-15  Romain Bignon <progs@headfucking.net>

	* src/JoinGame.cpp (TPlayerLine): Composant utilisé dans un TList pour la liste des players dans
	TGameInfos.

	* src/gui/Component.h (TList): Création du composant TList, conteneur de composants.

	* Utilisation d'iterateurs un peu partout plutot que de boucles à index.

	* server/Channels.cpp: Interdiction d'utiliser une place ou une couleur déjà prise.

2006-01-14  Romain Bignon <progs@headfucking.net>

	* src/gui/Menu.cpp: Correction de Menu::EnterString().

	* src/Login.cpp, src/Main.cpp: request_game() a bougé dans Login.cpp et a été entièrement remodelé
	avec l'utilisation d'un TForm plutot que d'un menu. Affichage du MOTD

	* server/Config.cpp, server/Login.cpp: Envoie d'un motd.

	* src/gui/Memo.cpp: Utilisation du parsage du TMessageBox pour ne pas couper les mots.

	* src/Commands.h, src/Login.cpp: Support de la commande MAJ.

	* server/Channels.cpp: Petite modification de noms de variables.

	* API, server/Server.h: Suppression de la raison pour le LEA ou le BYE. Rajout MOTD.

	* server/Debug.cpp: Correction du logging dans un fichier.

	* server/Main.cpp: Trouve le path de ~/.euroconqserver. Sauvegarde dans une variable de
	EuroConqServerApp.

	* src/Main.h: Sauvegarde de path dans une variable de EuroConqApp.

	* src/Defines.h, server/Defines.h: Passage à des constantes plutot que des macros pour les tailles.

2006-01-13  Romain Bignon <progs@headfucking.net>

	* src/tools/Font.cpp: Suspension temporaire du cache, il causait des problèmes.

	* src/gui/Boutton.cpp (Test): Ne renvoie true que si le bouton est Enabled.

	* API, lib/Channels.h, server/Channels.cpp, src/JoinGames.cpp:
	- Changement du protocole de PLS qui affiche si l'user est ok.
	- Rajout du mode '!' pour se définir comme étant OK.
	- Noter en particulier dans server/Channels.cpp::SETCommand::Exec la suppression des deux macros
	  dont la laideur me faisait frémir pendant mon someil.

	* src/gui/SpinEdit.cpp: La fonction Click() renvoie true que si la valeur a été modifiée.

2006-01-01  Laurent Defert <lodesi2@yahoo.fr>

	* src/Main.cpp, src/Menu.cpp: Correction de quelques bugs et éclaircissement du code.

2006-01-01  Romain Bignon <progs@headfucking.net>

	* DEVELOPPEURS: Fichier pour que les developpeurs puissent laisser des notes aux autres.
	(oui je sais il n'y a que deux developpeurs et l'IRC ça existe mais bon, on fait genre)

	* patch: Répertoire contenant les patchs qui ont été receptionnés de l'exterieur (oui je *sais*
	y a personne qui en envoie mais BON).

2005-12-28  Romain Bignon <progs@headfucking.net>

	* *.h: Passage de la majorité des fonctions membres qui le doivent en "const" pour respecter
	la norme C++.

2005-12-21  Romain Bignon <progs@headfucking.net>

	* src/tools/Font.cpp: Mise d'un cache. (© Wormux)

	* src/gui/SpinEdit.cpp (TSpinEdit): Composant TSpinEdit pour un Edit de nombres.

	* src/gui/Component.h, src/gui/Button.h: Mise de l'attribut Enabled directement dans TComponent.

	* server/Channels.cpp (SETCommand::Exec): Fonction de la commande SET pour parser les modes d'un chan.

	* src/JoinGame.cpp (SETCommand::Exec): Fonction de la commande SET pour parser les modes d'un chan.

	* server/Server.cpp, src/Commands.cpp: Changement de la commande SETS en SET.

	* server/Login.cpp: Utilisation de la nouvelle syntaxe de StrToTyp;

	* server/Channels.cpp: Envoie des modes avec SET.

	* lib/Outils.h (StrToTyp): La fonction renvoie désormais la valeur plutot que de l'assigner
	dans une variable donnée en argument.
	(FichierExist): Fonction pour vérifier l'existence d'un fichier.

	* lib/Channels.cpp (ECBChannel::ModesStr): Fonction qui retourne le buffer des modes.
	(ECBChannel::PlayerList): Rajout de la position et de la couleur.

	* API: Modification de SET: prend en charges des modes à la IRC. Voir section 4. Modes.

2005-12-20  Romain Bignon <progs@headfucking.net>

	* src/JoinGame.cpp: Utilisation du TForm pour les écrans ListGame et GameInfos.

	* Edit.cpp,Memo.cpp,ListBox.cpp,Button.cpp,TextButton.cpp: Dérivation de TComponent

	* src/gui/MessageBox.cpp: Utilisation du TForm pour faire marcher correctement.

	* src/gui/Component.cpp: Création de TComponent qui est la base de tous les composants.

	* src/gui/Form.cpp: Création de TForm qui est la base des forms contenant les composants.
	Ça va permettre de gérer les "fenêtres" plus simplement.

	* src/gui/Label.cpp: Composant TLabel. Le nom est assez explicite.

2005-12-16  Romain Bignon <progs@headfucking.net>

	* src/gui/MessageBox.cpp (TMessageBox): Classe d'un composant qui affiche une fenêtre avec un message
	et des boutons d'un certain type.

	* server/Config.cpp, server/euroconqd.conf: Rajout du champ DEFLIMITE pour la limite par default
	d'un jeu.

	* API: Modification du protocole: plus de "$" pour indiquer si c'est un quit ou non -> on s'en fou!

	* src/JoinGame.cpp (GameInfos): Taille du TMemo proportionnel au nombre de joueurs (en priant
	pour qu'il n'y en ait pas des tonnes). Messages dans le TMemo lors de join/part.

	* src/gui/Memo.cpp: Rajout fonctions SetHeight et SetWidth pour modifier la taille.

	* configure.ac: Correction d'un problème qui ne mettait plus les cflags de sdl.

	* Petites modifs par ci par là.

	* src/Sockets.cpp (read_sock): Correction d'un bug qui rajoutait à chaques fois un parv.

2005-12-02  Romain Bignon <progs@headfucking.net>

	* server/Channels.cpp (JOICommand): Envoie de ER1 (CANTJOIN) si le chan est plein

	* API: Modifications de l'API

2005-11-30  Romain Bignon <progs@headfucking.net>

	* src/gui/: Renomage des différents composants en T*.

	* configure.ac: Possibilité de ne pas compiler le jeu.

	* Application des debugages un peu partout...

	* lib/Outils.cpp (Format): Fonction qui formate (à la sprintf) mais qui retourne le résultat dans
	une std::string.
	(get_time): Retourne la date formatée.

	* lib/Debug.cpp: Création fichier.
	(TECExcept): Classe d'exception.

	* src/Debug.cpp (Debug): Fonction pour envoyer un debug au serveur et/ou printf.

	* server/Debug.cpp (Debug): Fonction lors de la reception d'erreurs. Ecriture dans un fichier.
	(ERRCommand): Commande lorsqu'un client rapporte un bug.

2005-11-28  Romain Bignon <progs@headfucking.net>

	* server/Channels.cpp: Empeche le join d'un salon en cours de jeu...

	* src/Main.cpp: Utilisation du parsage unicode des chars au clavier.

	* src/JoinGame.cpp: Utilisation du ListBox et du Edit pour faire un petit espace de discussion.

	* src/gui/Memo.cpp: Création du composant Memo en s'inspirant du ListBox.

	* src/gui/Edit.cpp: Création du composant Edit.

2005-11-27  Romain Bignon <progs@headfucking.net>

	* src/gui/ListBox.cpp: Disable...

	* src/Commands.h: Commande MSG et LEA

	* server/Channels.c: Commande MSG.

	* lib/Channels.h: State.

	* lib/Outils.cpp: Correction bug de stringtok.

	* src/JoinGame.cpp: Interface DANS une partie.

2005-11-26  Romain Bignon <progs@headfucking.net>

	* src/Login.cpp: Gestion commande Used

	* src/Main.cpp: Meilleur système de connexion.

	* src/gui/Menu.cpp: Utilisation d'une fonction plus généraliste et statique Menu::EnterString().

	* src/Sockets.cpp: Parsage du premier argument de parv (player(s)).

	* src/Commands.h: Commandes JOI, PLS, EOL, USED.

	* src/JoinGame.cpp: support du join.

	* src/gui/ListBox.cpp: Membre ClearItems().

	* src/Resources.cpp: Anim NormalButton.

	* src/gui/BouttonText.cpp: Rajout du fichier avec ButtonText pour dessiner un bouton (©wormux)

2005-11-25  Romain Bignon <progs@headfucking.net>

	* src/JoinGame.cpp: Rajout du fichier pour la boucle de la liste des jeux, ainsi que de l'écran
	de création/join de jeu.

	* src/data/anims: Répertoire créé. Avec dedans les anims des boutons "up" et "down".

	* src/tools/Maths.cpp: Création fichier avec deux petites fonctions.

	* src/Resources.cpp: rajout des sprites pour UpButton et DownButton

	* src/gui/ListBox.cpp: Rajout du fichier avec la classe ListBox pour dessiner une listbox (©wormux)

	* src/gui/Boutton.cpp: Rajout du fichier avec la classe Button pour dessiner un bouton (©wormux)

	* src/tools/Images.h: rajout de ECSprite::GetWidth() et ECSprite::GetHeight()

2005-11-23  Romain Bignon <progs@headfucking.net>

	* src/gui: Création du répertoire. Mise de Menu.cpp dedans ainsi que de ListBox.cpp (vide).

	* server/Server.cpp (TClient::Init): Met la valeur de lastread à maintenant pour éviter un
	PIG immédiat.

	* server/Login.cpp (BYECommand): Commande pour faire partir un client.

	* server/Channels.cpp (LSPCommande): Commande pour lister les jeux.
	(~EChannel): Destructeur se retire de la liste ChanList.

	* server/Channels.cpp, server/Channels.h (sendto_players): envoie à tous les joueurs du jeu
	(JOICommand): commande pour joindre ou créer un jeu
	(LEACommand): commande pour partir d'un jeu

	* lib/Outils.c (FormatStr): fonction qui formate les chaines en un "mot" (mise de '\')

2005-11-22  Romain Bignon <progs@headfucking.net>

	* API: Mise à jour.

	* server/Server.h, server/Server.cpp, server/Main.h, server/Login.cpp: Utilisation plus
	structurée de TClient;

	* server/Channels.cpp, server/Channels.h (EChannels): Structure serveur des channels.
	(ECPlayer): Structure serveur des players.

	* lib/Channels.h, lib/Channels.cpp (ECBChannels): Structure de base (commune) des channels.
	(ECBPlayer): Structure de base (commune) des channels.

2005-11-21  Romain Bignon <progs@headfucking.net>

	* server/Channels.cpp, lib/Channels.h: Création des fichiers.

	* lib/Channels.cpp, lib/Channels.h: Création des fichiers.
	(EChannel): classe channel par default.
	(ECPlayer): classe player par default.

	* src/Sockets.cpp: Correction du bug de la connexion.

	* src/Login.cpp: Prise en charge de la commande AIM.

	* API: Mise à jour.

	* INSTALL: Remplissage.

2005-11-20  Romain Bignon <progs@headfucking.net>

	* src/Sockets.cpp: réécriture des sockets. Utilisation de SDL_Thread.

	* src/Main.cpp (EuroConqApp::request_game()): Utilisation d'un second menu pour "Jouer".

2005-11-18  Romain Bignon <progs@headfucking.net>

	* autogen.sh, configure.ac: prise en compte sdl, ajout DEBUG, changement autogen.sh (©wormux), etc.

	* Reorganisation des dossiers

	* Passage à SDL terminé (mais il faut debuguer !)

	* src/Menu.cpp: Passage normalement correct à SDL.

	* src/tools/Images.h, src/tools/Images.c: Création du fichier (reprise de fonctions d'un tuto)
	(ECImage): classe pour les images
	(ECSpriteBase): classe pour la base des animations
	(ECSprite): classe pour les animations

	* src/tools/Font.cpp, src/tools/Font.h: Reprise du fichier de Wormux.

	* lib/Outils.h (StrToInt): changement en StrToTyp()
	(TypToStr): fonction pour transformer en une chaine.

2005-11-16  Romain Bignon <progs@headfucking.net>

	* Transcription de ClanLib vers SDL en cours...

2005-11-11  Romain Bignon <progs@headfucking.net>

	* server/Login.cpp: Rajout du fichier avec les fonctions de logging.
	(PIGCommand::Exec): Fonction PING
	(POGCommand::Exec): Fonction PONG
	(IAMCommand::Exec): Fonction IAM

	* src/Login.cpp: Rajout du fichier avec les fonctions de logging.
	(HELCommand::Exec): Fonction HELLO
	(PIGCommand::Exec): Fonction PING
	(POGCommand::Exec): Fonction PONG

	* src/Sockets.c: corrections

	* server/Commands.h, server/Server.c: Parsage des commandes correct.

	* server/Server.c (ECServer::parsemsg): Création de cette fonction de parsage.
	(ECServer::sendrpl): Création de cette fonction pour envoyer un message
	(ECServer::rpl): Création de cette fonction qui renvoie le pattern à partir d'un enumérateur.

2005-11-08  Romain Bignon <progs@headfucking.net>

	* pics/loading.png: Utilisation d'un png pour le loading.

	* server/: Création du serveur (option --enable-server dans configure pour compiler).

	* lib/: Utilisation maintenant de ce rep pour mettre le code utilisé par les deux programmes.

	* Sockets.cpp: Theoriquement plus aucun bug.

2005-11-08  Romain Bignon <progs@headfucking.net>

	* Sockets.cpp: Système de commandes theoriquement *pret*.

	* Sockets (EC_Client::send): Fonction crée.

2005-11-07  Romain Bignon <progs@headfucking.net>

	* Sockets.cpp: Ébauche de la gestion des commandes.

2005-11-06  Romain Bignon <progs@headfucking.net>

	* Menu.cpp: Gestion de flags:
	M_READ_ONLY: Champ non modifiable ou lien inactif, change la couleur du focus en gris.
	M_NOFMAJ: Ne pas mettre une maj automatique au début d'une chaine pour un MenuItem_String.
	M_RETOUR: Gère comme étant un bouton de retour: légèrement séparé, et retourne au menu supérieur.

	* Sockets.c (connect_to_server): Affichage d'un message d'erreur si la connexion echoue.

	* Sockets.c: Utilisation des sockets "de bases" avant de se servir de CL_Socket: permet d'éviter
	un bug bizare qui ne permet de se connecter qu'en local.

	* Outils.cpp (stringtok): Équivalent de strtok pour les chaines.

	* Outils.cpp: Outils

	* Config.cpp: Création de la configuration.

	* API: Reflexion sur le protocole.

	* Sockets.cpp: Correction bug du blockage du socket.

2005-11-05  Romain Bignon <progs@headfucking.net>

	* Sockets.cpp: Création d'un support sockets.

	* Utilisation d'un repositery CVS.

	* Menu.cpp: Possibilité d'une fonction à appeler lors de l'utilisation d'un Item.

	* pics/smallfont.pcs: Modification de la fonte.

	* pics/: Utilisations d'un beau background. (By Thomas)

	* Defines.h: Création du fichier et d'un super système de gestion des versions.

	* Main.cpp (main): Création fonction avec menu.

	* Menu.cpp: Reprise du fichier de clanbomber pour la création de menus.

	* Timer.cpp: Reprise du fichier de clanbomber pour la création de timers.

	* Resources.cpp: Inspiration de clanbomber pour l'utilisation des fichiers de ressources.

	* array.h,link.h: Utilisation de ces fichiers d'origine clanlib.

2005-11-04  Romain Bignon <progs@headfucking.net>

	* Initialisation du projet.